'use strict';

var _ = require('lodash');
var chalk = require('chalk');
var glob = require('glob');
var noon = require('noon');

/**
  * The themes module provides useful repetitive theme tasks
  * @module Themes
  */

/**
  * Loads theme
  * @public
  * @param {string} theme The name of the theme
  * @return {Object} theme The style to use
  */
exports.loadTheme = function (theme) {
  return noon.load('themes/' + theme + '.noon');
};

/**
  * Gets themes for list command
  * @public
  * @return {Array} List of theme names
  */
exports.getThemes = function () {
  var list = [];
  var files = glob.sync('themes/*.noon');
  _.each(files, function (path) {
    var name = path.replace(/themes\/|\.noon/, '');
    list.push(name);
  });
  return list;
};

/**
  * Prints connector and content below the label
  * @public
  * @param {string} text The label text
  * @param {Object} theme The style to use
  * @param {string} [content] The text the label points at
  */
exports.labelDown = function (text, theme, content) {
  var pstyle = _.get(chalk, theme.prefix.style);
  process.stdout.write(pstyle(theme.prefix.str));
  var tstyle = _.get(chalk, theme.text.style);
  process.stdout.write(tstyle(text));
  var sstyle = _.get(chalk, theme.suffix.style);
  process.stdout.write(sstyle(theme.suffix.str));
  console.log('');
  if (content !== null || undefined) {
    var cnstyle = _.get(chalk, theme.connector.style);
    process.stdout.write(cnstyle(theme.connector.str));
    var ctstyle = _.get(chalk, theme.content.style);
    console.log(ctstyle(content));
  }
};

/**
  * Prints connector and content next to the label
  * @public
  * @param {string} text The label text
  * @param {Object} theme The style to use
  * @param {string} [content] The text the label points at
  */
exports.labelRight = function (text, theme, content) {
  var pstyle = _.get(chalk, theme.prefix.style);
  process.stdout.write(pstyle(theme.prefix.str));
  var tstyle = _.get(chalk, theme.text.style);
  process.stdout.write(tstyle(text));
  var sstyle = _.get(chalk, theme.suffix.style);
  process.stdout.write(sstyle(theme.suffix.str));
  if (content !== null || undefined) {
    var cnstyle = _.get(chalk, theme.connector.style);
    process.stdout.write(cnstyle(theme.connector.str));
    var ctstyle = _.get(chalk, theme.content.style);
    console.log(ctstyle(content));
  }
};
//# sourceMappingURL=data:application/json;base64,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TSxLQUFOLEVBQWEsTUFBTSxTQUFOLENBQWdCLEtBQTdCLENBQWhCO0FBQ0EsWUFBUSxNQUFSLENBQWUsS0FBZixDQUFxQixRQUFRLE1BQU0sU0FBTixDQUFnQixHQUF4QixDQUFyQjtBQUNBLFFBQU0sVUFBVSxFQUFFLEdBQUYsQ0FBTSxLQUFOLEVBQWEsTUFBTSxPQUFOLENBQWMsS0FBM0IsQ0FBaEI7QUFDQSxZQUFRLEdBQVIsQ0FBWSxRQUFRLE9BQVIsQ0FBWjtBQUNEO0FBQ0YsQ0FiRCIsImZpbGUiOiJ0aGVtZXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBfID0gcmVxdWlyZSgnbG9kYXNoJylcbmNvbnN0IGNoYWxrID0gcmVxdWlyZSgnY2hhbGsnKVxuY29uc3QgZ2xvYiA9IHJlcXVpcmUoJ2dsb2InKVxuY29uc3Qgbm9vbiA9IHJlcXVpcmUoJ25vb24nKVxuXG4vKipcbiAgKiBUaGUgdGhlbWVzIG1vZHVsZSBwcm92aWRlcyB1c2VmdWwgcmVwZXRpdGl2ZSB0aGVtZSB0YXNrc1xuICAqIEBtb2R1bGUgVGhlbWVzXG4gICovXG5cbi8qKlxuICAqIExvYWRzIHRoZW1lXG4gICogQHB1YmxpY1xuICAqIEBwYXJhbSB7c3RyaW5nfSB0aGVtZSBUaGUgbmFtZSBvZiB0aGUgdGhlbWVcbiAgKiBAcmV0dXJuIHtPYmplY3R9IHRoZW1lIFRoZSBzdHlsZSB0byB1c2VcbiAgKi9cbmV4cG9ydHMubG9hZFRoZW1lID0gKHRoZW1lKSA9PiBub29uLmxvYWQoYHRoZW1lcy8ke3RoZW1lfS5ub29uYClcblxuLyoqXG4gICogR2V0cyB0aGVtZXMgZm9yIGxpc3QgY29tbWFuZFxuICAqIEBwdWJsaWNcbiAgKiBAcmV0dXJuIHtBcnJheX0gTGlzdCBvZiB0aGVtZSBuYW1lc1xuICAqL1xuZXhwb3J0cy5nZXRUaGVtZXMgPSAoKSA9PiB7XG4gIGNvbnN0IGxpc3QgPSBbXVxuICBjb25zdCBmaWxlcyA9IGdsb2Iuc3luYygndGhlbWVzLyoubm9vbicpXG4gIF8uZWFjaChmaWxlcywgKHBhdGgpID0+IHtcbiAgICBjb25zdCBuYW1lID0gcGF0aC5yZXBsYWNlKC90aGVtZXNcXC98XFwubm9vbi8sICcnKVxuICAgIGxpc3QucHVzaChuYW1lKVxuICB9KVxuICByZXR1cm4gbGlzdFxufVxuXG4vKipcbiAgKiBQcmludHMgY29ubmVjdG9yIGFuZCBjb250ZW50IGJlbG93IHRoZSBsYWJlbFxuICAqIEBwdWJsaWNcbiAgKiBAcGFyYW0ge3N0cmluZ30gdGV4dCBUaGUgbGFiZWwgdGV4dFxuICAqIEBwYXJhbSB7T2JqZWN0fSB0aGVtZSBUaGUgc3R5bGUgdG8gdXNlXG4gICogQHBhcmFtIHtzdHJpbmd9IFtjb250ZW50XSBUaGUgdGV4dCB0aGUgbGFiZWwgcG9pbnRzIGF0XG4gICovXG5leHBvcnRzLmxhYmVsRG93biA9ICh0ZXh0LCB0aGVtZSwgY29udGVudCkgPT4ge1xuICBjb25zdCBwc3R5bGUgPSBfLmdldChjaGFsaywgdGhlbWUucHJlZml4LnN0eWxlKVxuICBwcm9jZXNzLnN0ZG91dC53cml0ZShwc3R5bGUodGhlbWUucHJlZml4LnN0cikpXG4gIGNvbnN0IHRzdHlsZSA9IF8uZ2V0KGNoYWxrLCB0aGVtZS50ZXh0LnN0eWxlKVxuICBwcm9jZXNzLnN0ZG91dC53cml0ZSh0c3R5bGUodGV4dCkpXG4gIGNvbnN0IHNzdHlsZSA9IF8uZ2V0KGNoYWxrLCB0aGVtZS5zdWZmaXguc3R5bGUpXG4gIHByb2Nlc3Muc3Rkb3V0LndyaXRlKHNzdHlsZSh0aGVtZS5zdWZmaXguc3RyKSlcbiAgY29uc29sZS5sb2coJycpXG4gIGlmIChjb250ZW50ICE9PSBudWxsIHx8IHVuZGVmaW5lZCkge1xuICAgIGNvbnN0IGNuc3R5bGUgPSBfLmdldChjaGFsaywgdGhlbWUuY29ubmVjdG9yLnN0eWxlKVxuICAgIHByb2Nlc3Muc3Rkb3V0LndyaXRlKGNuc3R5bGUodGhlbWUuY29ubmVjdG9yLnN0cikpXG4gICAgY29uc3QgY3RzdHlsZSA9IF8uZ2V0KGNoYWxrLCB0aGVtZS5jb250ZW50LnN0eWxlKVxuICAgIGNvbnNvbGUubG9nKGN0c3R5bGUoY29udGVudCkpXG4gIH1cbn1cblxuLyoqXG4gICogUHJpbnRzIGNvbm5lY3RvciBhbmQgY29udGVudCBuZXh0IHRvIHRoZSBsYWJlbFxuICAqIEBwdWJsaWNcbiAgKiBAcGFyYW0ge3N0cmluZ30gdGV4dCBUaGUgbGFiZWwgdGV4dFxuICAqIEBwYXJhbSB7T2JqZWN0fSB0aGVtZSBUaGUgc3R5bGUgdG8gdXNlXG4gICogQHBhcmFtIHtzdHJpbmd9IFtjb250ZW50XSBUaGUgdGV4dCB0aGUgbGFiZWwgcG9pbnRzIGF0XG4gICovXG5leHBvcnRzLmxhYmVsUmlnaHQgPSAodGV4dCwgdGhlbWUsIGNvbnRlbnQpID0+IHtcbiAgY29uc3QgcHN0eWxlID0gXy5nZXQoY2hhbGssIHRoZW1lLnByZWZpeC5zdHlsZSlcbiAgcHJvY2Vzcy5zdGRvdXQud3JpdGUocHN0eWxlKHRoZW1lLnByZWZpeC5zdHIpKVxuICBjb25zdCB0c3R5bGUgPSBfLmdldChjaGFsaywgdGhlbWUudGV4dC5zdHlsZSlcbiAgcHJvY2Vzcy5zdGRvdXQud3JpdGUodHN0eWxlKHRleHQpKVxuICBjb25zdCBzc3R5bGUgPSBfLmdldChjaGFsaywgdGhlbWUuc3VmZml4LnN0eWxlKVxuICBwcm9jZXNzLnN0ZG91dC53cml0ZShzc3R5bGUodGhlbWUuc3VmZml4LnN0cikpXG4gIGlmIChjb250ZW50ICE9PSBudWxsIHx8IHVuZGVmaW5lZCkge1xuICAgIGNvbnN0IGNuc3R5bGUgPSBfLmdldChjaGFsaywgdGhlbWUuY29ubmVjdG9yLnN0eWxlKVxuICAgIHByb2Nlc3Muc3Rkb3V0LndyaXRlKGNuc3R5bGUodGhlbWUuY29ubmVjdG9yLnN0cikpXG4gICAgY29uc3QgY3RzdHlsZSA9IF8uZ2V0KGNoYWxrLCB0aGVtZS5jb250ZW50LnN0eWxlKVxuICAgIGNvbnNvbGUubG9nKGN0c3R5bGUoY29udGVudCkpXG4gIH1cbn1cbiJdfQ==