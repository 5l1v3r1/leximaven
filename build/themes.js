'use strict';

var _ = require('lodash');
var chalk = require('chalk');
var glob = require('glob');
var noon = require('noon');

/**
  * The themes module provides useful repetitive theme tasks
  * @module Themes
  */

/**
  * Loads theme
  * @public
  * @param {string} theme The name of the theme
  * @return {Object} theme The style to use
  */
exports.loadTheme = function (theme) {
  return noon.load('themes/' + theme + '.noon');
};

/**
  * Gets themes for list command
  * @public
  * @return {Array} List of theme names
  */
exports.getThemes = function () {
  var list = [];
  var files = glob.sync('themes/*.noon');
  _.each(files, function (path) {
    var name = path.replace(/themes\//, '').replace(/\.noon/, '');
    list.push(name);
  });
  return list;
};

/**
  * Prints connector and content below the label
  * @public
  * @param {string} text The label text
  * @param {Object} theme The style to use
  * @param {string} [content] The text the label points at
  */
exports.labelDown = function (text, theme, content) {
  var pstyle = _.get(chalk, theme.prefix.style);
  process.stdout.write(pstyle(theme.prefix.str));
  var tstyle = _.get(chalk, theme.text.style);
  process.stdout.write(tstyle(text));
  var sstyle = _.get(chalk, theme.suffix.style);
  process.stdout.write(sstyle(theme.suffix.str));
  console.log('');
  if (content !== null || undefined) {
    var cnstyle = _.get(chalk, theme.connector.style);
    process.stdout.write(cnstyle(theme.connector.str));
    var ctstyle = _.get(chalk, theme.content.style);
    console.log(ctstyle(content));
  }
};

/**
  * Prints connector and content next to the label
  * @public
  * @param {string} text The label text
  * @param {Object} theme The style to use
  * @param {string} [content] The text the label points at
  */
exports.labelRight = function (text, theme, content) {
  var pstyle = _.get(chalk, theme.prefix.style);
  process.stdout.write(pstyle(theme.prefix.str));
  var tstyle = _.get(chalk, theme.text.style);
  process.stdout.write(tstyle(text));
  var sstyle = _.get(chalk, theme.suffix.style);
  process.stdout.write(sstyle(theme.suffix.str));
  if (content !== null || undefined) {
    var cnstyle = _.get(chalk, theme.connector.style);
    process.stdout.write(cnstyle(theme.connector.str));
    var ctstyle = _.get(chalk, theme.content.style);
    console.log(ctstyle(content));
  }
};
//# sourceMappingURL=data:application/json;base64,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RUFBbUM7QUFDakMsUUFBTSxVQUFVLEVBQUUsR0FBRixDQUFNLEtBQU4sRUFBYSxNQUFNLFNBQU4sQ0FBZ0IsS0FBN0IsQ0FBaEI7QUFDQSxZQUFRLE1BQVIsQ0FBZSxLQUFmLENBQXFCLFFBQVEsTUFBTSxTQUFOLENBQWdCLEdBQXhCLENBQXJCO0FBQ0EsUUFBTSxVQUFVLEVBQUUsR0FBRixDQUFNLEtBQU4sRUFBYSxNQUFNLE9BQU4sQ0FBYyxLQUEzQixDQUFoQjtBQUNBLFlBQVEsR0FBUixDQUFZLFFBQVEsT0FBUixDQUFaO0FBQ0Q7QUFDRixDQWJEIiwiZmlsZSI6InRoZW1lcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IF8gPSByZXF1aXJlKCdsb2Rhc2gnKVxuY29uc3QgY2hhbGsgPSByZXF1aXJlKCdjaGFsaycpXG5jb25zdCBnbG9iID0gcmVxdWlyZSgnZ2xvYicpXG5jb25zdCBub29uID0gcmVxdWlyZSgnbm9vbicpXG5cbi8qKlxuICAqIFRoZSB0aGVtZXMgbW9kdWxlIHByb3ZpZGVzIHVzZWZ1bCByZXBldGl0aXZlIHRoZW1lIHRhc2tzXG4gICogQG1vZHVsZSBUaGVtZXNcbiAgKi9cblxuLyoqXG4gICogTG9hZHMgdGhlbWVcbiAgKiBAcHVibGljXG4gICogQHBhcmFtIHtzdHJpbmd9IHRoZW1lIFRoZSBuYW1lIG9mIHRoZSB0aGVtZVxuICAqIEByZXR1cm4ge09iamVjdH0gdGhlbWUgVGhlIHN0eWxlIHRvIHVzZVxuICAqL1xuZXhwb3J0cy5sb2FkVGhlbWUgPSAodGhlbWUpID0+IG5vb24ubG9hZChgdGhlbWVzLyR7dGhlbWV9Lm5vb25gKVxuXG4vKipcbiAgKiBHZXRzIHRoZW1lcyBmb3IgbGlzdCBjb21tYW5kXG4gICogQHB1YmxpY1xuICAqIEByZXR1cm4ge0FycmF5fSBMaXN0IG9mIHRoZW1lIG5hbWVzXG4gICovXG5leHBvcnRzLmdldFRoZW1lcyA9ICgpID0+IHtcbiAgY29uc3QgbGlzdCA9IFtdXG4gIGNvbnN0IGZpbGVzID0gZ2xvYi5zeW5jKCd0aGVtZXMvKi5ub29uJylcbiAgXy5lYWNoKGZpbGVzLCAocGF0aCkgPT4ge1xuICAgIGNvbnN0IG5hbWUgPSBwYXRoLnJlcGxhY2UoL3RoZW1lc1xcLy8sICcnKS5yZXBsYWNlKC9cXC5ub29uLywgJycpXG4gICAgbGlzdC5wdXNoKG5hbWUpXG4gIH0pXG4gIHJldHVybiBsaXN0XG59XG5cbi8qKlxuICAqIFByaW50cyBjb25uZWN0b3IgYW5kIGNvbnRlbnQgYmVsb3cgdGhlIGxhYmVsXG4gICogQHB1YmxpY1xuICAqIEBwYXJhbSB7c3RyaW5nfSB0ZXh0IFRoZSBsYWJlbCB0ZXh0XG4gICogQHBhcmFtIHtPYmplY3R9IHRoZW1lIFRoZSBzdHlsZSB0byB1c2VcbiAgKiBAcGFyYW0ge3N0cmluZ30gW2NvbnRlbnRdIFRoZSB0ZXh0IHRoZSBsYWJlbCBwb2ludHMgYXRcbiAgKi9cbmV4cG9ydHMubGFiZWxEb3duID0gKHRleHQsIHRoZW1lLCBjb250ZW50KSA9PiB7XG4gIGNvbnN0IHBzdHlsZSA9IF8uZ2V0KGNoYWxrLCB0aGVtZS5wcmVmaXguc3R5bGUpXG4gIHByb2Nlc3Muc3Rkb3V0LndyaXRlKHBzdHlsZSh0aGVtZS5wcmVmaXguc3RyKSlcbiAgY29uc3QgdHN0eWxlID0gXy5nZXQoY2hhbGssIHRoZW1lLnRleHQuc3R5bGUpXG4gIHByb2Nlc3Muc3Rkb3V0LndyaXRlKHRzdHlsZSh0ZXh0KSlcbiAgY29uc3Qgc3N0eWxlID0gXy5nZXQoY2hhbGssIHRoZW1lLnN1ZmZpeC5zdHlsZSlcbiAgcHJvY2Vzcy5zdGRvdXQud3JpdGUoc3N0eWxlKHRoZW1lLnN1ZmZpeC5zdHIpKVxuICBjb25zb2xlLmxvZygnJylcbiAgaWYgKGNvbnRlbnQgIT09IG51bGwgfHwgdW5kZWZpbmVkKSB7XG4gICAgY29uc3QgY25zdHlsZSA9IF8uZ2V0KGNoYWxrLCB0aGVtZS5jb25uZWN0b3Iuc3R5bGUpXG4gICAgcHJvY2Vzcy5zdGRvdXQud3JpdGUoY25zdHlsZSh0aGVtZS5jb25uZWN0b3Iuc3RyKSlcbiAgICBjb25zdCBjdHN0eWxlID0gXy5nZXQoY2hhbGssIHRoZW1lLmNvbnRlbnQuc3R5bGUpXG4gICAgY29uc29sZS5sb2coY3RzdHlsZShjb250ZW50KSlcbiAgfVxufVxuXG4vKipcbiAgKiBQcmludHMgY29ubmVjdG9yIGFuZCBjb250ZW50IG5leHQgdG8gdGhlIGxhYmVsXG4gICogQHB1YmxpY1xuICAqIEBwYXJhbSB7c3RyaW5nfSB0ZXh0IFRoZSBsYWJlbCB0ZXh0XG4gICogQHBhcmFtIHtPYmplY3R9IHRoZW1lIFRoZSBzdHlsZSB0byB1c2VcbiAgKiBAcGFyYW0ge3N0cmluZ30gW2NvbnRlbnRdIFRoZSB0ZXh0IHRoZSBsYWJlbCBwb2ludHMgYXRcbiAgKi9cbmV4cG9ydHMubGFiZWxSaWdodCA9ICh0ZXh0LCB0aGVtZSwgY29udGVudCkgPT4ge1xuICBjb25zdCBwc3R5bGUgPSBfLmdldChjaGFsaywgdGhlbWUucHJlZml4LnN0eWxlKVxuICBwcm9jZXNzLnN0ZG91dC53cml0ZShwc3R5bGUodGhlbWUucHJlZml4LnN0cikpXG4gIGNvbnN0IHRzdHlsZSA9IF8uZ2V0KGNoYWxrLCB0aGVtZS50ZXh0LnN0eWxlKVxuICBwcm9jZXNzLnN0ZG91dC53cml0ZSh0c3R5bGUodGV4dCkpXG4gIGNvbnN0IHNzdHlsZSA9IF8uZ2V0KGNoYWxrLCB0aGVtZS5zdWZmaXguc3R5bGUpXG4gIHByb2Nlc3Muc3Rkb3V0LndyaXRlKHNzdHlsZSh0aGVtZS5zdWZmaXguc3RyKSlcbiAgaWYgKGNvbnRlbnQgIT09IG51bGwgfHwgdW5kZWZpbmVkKSB7XG4gICAgY29uc3QgY25zdHlsZSA9IF8uZ2V0KGNoYWxrLCB0aGVtZS5jb25uZWN0b3Iuc3R5bGUpXG4gICAgcHJvY2Vzcy5zdGRvdXQud3JpdGUoY25zdHlsZSh0aGVtZS5jb25uZWN0b3Iuc3RyKSlcbiAgICBjb25zdCBjdHN0eWxlID0gXy5nZXQoY2hhbGssIHRoZW1lLmNvbnRlbnQuc3R5bGUpXG4gICAgY29uc29sZS5sb2coY3RzdHlsZShjb250ZW50KSlcbiAgfVxufVxuIl19