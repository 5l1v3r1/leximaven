'use strict';

var themes = require('../../themes');
var tools = require('../../tools');

var chalk = require('chalk');
var dot = require('dotty');
var noon = require('noon');

var CFILE = process.env.HOME + '/.leximaven.noon';

exports.command = 'set <key> <value>';
exports.desc = 'Set a config value';
exports.builder = {};
exports.handler = function (argv) {
  var key = argv.key;
  var value = argv.value;
  value = tools.checkBoolean(value);
  tools.checkConfig(CFILE);
  var config = noon.load(CFILE);
  var theme = themes.loadTheme(config.theme);
  if (config.verbose) themes.labelDown('Configuration', theme, null);
  if (dot.exists(config, key)) {
    if (/\./i.test(key)) {
      dot.put(config, key, value);
    } else {
      config[key] = value;
    }
  } else {
    console.error(chalk.red.bold('Option ' + key + ' not found.'));
    process.exit(1);
  }
  noon.save(CFILE, config);
  console.log('Set option ' + chalk.white.bold(key) + ' to ' + chalk.white.bold(value) + '.');
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNtZHMvY29uZmlnX2NtZHMvc2V0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTSxTQUFTLFFBQVEsY0FBUixDQUFmO0FBQ0EsSUFBTSxRQUFRLFFBQVEsYUFBUixDQUFkOztBQUVBLElBQU0sUUFBUSxRQUFRLE9BQVIsQ0FBZDtBQUNBLElBQU0sTUFBTSxRQUFRLE9BQVIsQ0FBWjtBQUNBLElBQU0sT0FBTyxRQUFRLE1BQVIsQ0FBYjs7QUFFQSxJQUFNLFFBQVcsUUFBUSxHQUFSLENBQVksSUFBdkIscUJBQU47O0FBRUEsUUFBUSxPQUFSLEdBQWtCLG1CQUFsQjtBQUNBLFFBQVEsSUFBUixHQUFlLG9CQUFmO0FBQ0EsUUFBUSxPQUFSLEdBQWtCLEVBQWxCO0FBQ0EsUUFBUSxPQUFSLEdBQWtCLFVBQUMsSUFBRCxFQUFVO0FBQzFCLE1BQU0sTUFBTSxLQUFLLEdBQWpCO0FBQ0EsTUFBSSxRQUFRLEtBQUssS0FBakI7QUFDQSxVQUFRLE1BQU0sWUFBTixDQUFtQixLQUFuQixDQUFSO0FBQ0EsUUFBTSxXQUFOLENBQWtCLEtBQWxCO0FBQ0EsTUFBTSxTQUFTLEtBQUssSUFBTCxDQUFVLEtBQVYsQ0FBZjtBQUNBLE1BQU0sUUFBUSxPQUFPLFNBQVAsQ0FBaUIsT0FBTyxLQUF4QixDQUFkO0FBQ0EsTUFBSSxPQUFPLE9BQVgsRUFBb0IsT0FBTyxTQUFQLENBQWlCLGVBQWpCLEVBQWtDLEtBQWxDLEVBQXlDLElBQXpDO0FBQ3BCLE1BQUksSUFBSSxNQUFKLENBQVcsTUFBWCxFQUFtQixHQUFuQixDQUFKLEVBQTZCO0FBQzNCLFFBQUksTUFBTSxJQUFOLENBQVcsR0FBWCxDQUFKLEVBQXFCO0FBQ25CLFVBQUksR0FBSixDQUFRLE1BQVIsRUFBZ0IsR0FBaEIsRUFBcUIsS0FBckI7QUFDRCxLQUZELE1BRU87QUFDTCxhQUFPLEdBQVAsSUFBYyxLQUFkO0FBQ0Q7QUFDRixHQU5ELE1BTU87QUFDTCxZQUFRLEtBQVIsQ0FBYyxNQUFNLEdBQU4sQ0FBVSxJQUFWLGFBQXlCLEdBQXpCLGlCQUFkO0FBQ0EsWUFBUSxJQUFSLENBQWEsQ0FBYjtBQUNEO0FBQ0QsT0FBSyxJQUFMLENBQVUsS0FBVixFQUFpQixNQUFqQjtBQUNBLFVBQVEsR0FBUixpQkFBMEIsTUFBTSxLQUFOLENBQVksSUFBWixDQUFpQixHQUFqQixDQUExQixZQUFzRCxNQUFNLEtBQU4sQ0FBWSxJQUFaLENBQWlCLEtBQWpCLENBQXREO0FBQ0QsQ0FwQkQiLCJmaWxlIjoiY21kcy9jb25maWdfY21kcy9zZXQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB0aGVtZXMgPSByZXF1aXJlKCcuLi8uLi90aGVtZXMnKVxuY29uc3QgdG9vbHMgPSByZXF1aXJlKCcuLi8uLi90b29scycpXG5cbmNvbnN0IGNoYWxrID0gcmVxdWlyZSgnY2hhbGsnKVxuY29uc3QgZG90ID0gcmVxdWlyZSgnZG90dHknKVxuY29uc3Qgbm9vbiA9IHJlcXVpcmUoJ25vb24nKVxuXG5jb25zdCBDRklMRSA9IGAke3Byb2Nlc3MuZW52LkhPTUV9Ly5sZXhpbWF2ZW4ubm9vbmBcblxuZXhwb3J0cy5jb21tYW5kID0gJ3NldCA8a2V5PiA8dmFsdWU+J1xuZXhwb3J0cy5kZXNjID0gJ1NldCBhIGNvbmZpZyB2YWx1ZSdcbmV4cG9ydHMuYnVpbGRlciA9IHt9XG5leHBvcnRzLmhhbmRsZXIgPSAoYXJndikgPT4ge1xuICBjb25zdCBrZXkgPSBhcmd2LmtleVxuICBsZXQgdmFsdWUgPSBhcmd2LnZhbHVlXG4gIHZhbHVlID0gdG9vbHMuY2hlY2tCb29sZWFuKHZhbHVlKVxuICB0b29scy5jaGVja0NvbmZpZyhDRklMRSlcbiAgY29uc3QgY29uZmlnID0gbm9vbi5sb2FkKENGSUxFKVxuICBjb25zdCB0aGVtZSA9IHRoZW1lcy5sb2FkVGhlbWUoY29uZmlnLnRoZW1lKVxuICBpZiAoY29uZmlnLnZlcmJvc2UpIHRoZW1lcy5sYWJlbERvd24oJ0NvbmZpZ3VyYXRpb24nLCB0aGVtZSwgbnVsbClcbiAgaWYgKGRvdC5leGlzdHMoY29uZmlnLCBrZXkpKSB7XG4gICAgaWYgKC9cXC4vaS50ZXN0KGtleSkpIHtcbiAgICAgIGRvdC5wdXQoY29uZmlnLCBrZXksIHZhbHVlKVxuICAgIH0gZWxzZSB7XG4gICAgICBjb25maWdba2V5XSA9IHZhbHVlXG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGNvbnNvbGUuZXJyb3IoY2hhbGsucmVkLmJvbGQoYE9wdGlvbiAke2tleX0gbm90IGZvdW5kLmApKVxuICAgIHByb2Nlc3MuZXhpdCgxKVxuICB9XG4gIG5vb24uc2F2ZShDRklMRSwgY29uZmlnKVxuICBjb25zb2xlLmxvZyhgU2V0IG9wdGlvbiAke2NoYWxrLndoaXRlLmJvbGQoa2V5KX0gdG8gJHtjaGFsay53aGl0ZS5ib2xkKHZhbHVlKX0uYClcbn1cbiJdfQ==