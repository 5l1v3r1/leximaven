'use strict';

var themes = require('../../themes');
var tools = require('../../tools');

var chalk = require('chalk');
var dot = require('dotty');
var noon = require('noon');

var CFILE = process.env.HOME + '/.leximaven.noon';

exports.command = 'set <key> <value>';
exports.desc = 'Set a config value';
exports.builder = {};
exports.handler = function (argv) {
  var key = argv.key;
  var value = argv.value;
  value = tools.checkBoolean(value);
  tools.checkConfig(CFILE);
  var config = noon.load(CFILE);
  var theme = themes.loadTheme(config.theme);
  if (config.verbose) themes.labelDown('Configuration', theme, null);
  if (dot.exists(config, key)) {
    if (/\./i.test(key)) {
      if (/^\w*\.date/i.test(key)) {
        console.error(chalk.red("API limits hardcoded, can't set this key."));
        process.exit(1);
      } else {
        dot.put(config, key, value);
      }
    } else {
      config[key] = value;
    }
  } else {
    throw new Error('Option ' + key + ' not found.');
  }
  noon.save(CFILE, config);
  console.log('Set option ' + chalk.white.bold(key) + ' to ' + chalk.white.bold(value) + '.');
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNtZHMvY29uZmlnX2NtZHMvc2V0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTSxTQUFTLFFBQVEsY0FBUixDQUFmO0FBQ0EsSUFBTSxRQUFRLFFBQVEsYUFBUixDQUFkOztBQUVBLElBQU0sUUFBUSxRQUFRLE9BQVIsQ0FBZDtBQUNBLElBQU0sTUFBTSxRQUFRLE9BQVIsQ0FBWjtBQUNBLElBQU0sT0FBTyxRQUFRLE1BQVIsQ0FBYjs7QUFFQSxJQUFNLFFBQVcsUUFBUSxHQUFSLENBQVksSUFBdkIscUJBQU47O0FBRUEsUUFBUSxPQUFSLEdBQWtCLG1CQUFsQjtBQUNBLFFBQVEsSUFBUixHQUFlLG9CQUFmO0FBQ0EsUUFBUSxPQUFSLEdBQWtCLEVBQWxCO0FBQ0EsUUFBUSxPQUFSLEdBQWtCLFVBQUMsSUFBRCxFQUFVO0FBQzFCLE1BQU0sTUFBTSxLQUFLLEdBQWpCO0FBQ0EsTUFBSSxRQUFRLEtBQUssS0FBakI7QUFDQSxVQUFRLE1BQU0sWUFBTixDQUFtQixLQUFuQixDQUFSO0FBQ0EsUUFBTSxXQUFOLENBQWtCLEtBQWxCO0FBQ0EsTUFBTSxTQUFTLEtBQUssSUFBTCxDQUFVLEtBQVYsQ0FBZjtBQUNBLE1BQU0sUUFBUSxPQUFPLFNBQVAsQ0FBaUIsT0FBTyxLQUF4QixDQUFkO0FBQ0EsTUFBSSxPQUFPLE9BQVgsRUFBb0IsT0FBTyxTQUFQLENBQWlCLGVBQWpCLEVBQWtDLEtBQWxDLEVBQXlDLElBQXpDO0FBQ3BCLE1BQUksSUFBSSxNQUFKLENBQVcsTUFBWCxFQUFtQixHQUFuQixDQUFKLEVBQTZCO0FBQzNCLFFBQUksTUFBTSxJQUFOLENBQVcsR0FBWCxDQUFKLEVBQXFCO0FBQ25CLFVBQUksY0FBYyxJQUFkLENBQW1CLEdBQW5CLENBQUosRUFBNkI7QUFDM0IsZ0JBQVEsS0FBUixDQUFjLE1BQU0sR0FBTixDQUFVLDJDQUFWLENBQWQ7QUFDQSxnQkFBUSxJQUFSLENBQWEsQ0FBYjtBQUNELE9BSEQsTUFHTztBQUNMLFlBQUksR0FBSixDQUFRLE1BQVIsRUFBZ0IsR0FBaEIsRUFBcUIsS0FBckI7QUFDRDtBQUNGLEtBUEQsTUFPTztBQUNMLGFBQU8sR0FBUCxJQUFjLEtBQWQ7QUFDRDtBQUNGLEdBWEQsTUFXTztBQUNMLFVBQU0sSUFBSSxLQUFKLGFBQW9CLEdBQXBCLGlCQUFOO0FBQ0Q7QUFDRCxPQUFLLElBQUwsQ0FBVSxLQUFWLEVBQWlCLE1BQWpCO0FBQ0EsVUFBUSxHQUFSLGlCQUEwQixNQUFNLEtBQU4sQ0FBWSxJQUFaLENBQWlCLEdBQWpCLENBQTFCLFlBQXNELE1BQU0sS0FBTixDQUFZLElBQVosQ0FBaUIsS0FBakIsQ0FBdEQ7QUFDRCxDQXhCRCIsImZpbGUiOiJjbWRzL2NvbmZpZ19jbWRzL3NldC5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHRoZW1lcyA9IHJlcXVpcmUoJy4uLy4uL3RoZW1lcycpXG5jb25zdCB0b29scyA9IHJlcXVpcmUoJy4uLy4uL3Rvb2xzJylcblxuY29uc3QgY2hhbGsgPSByZXF1aXJlKCdjaGFsaycpXG5jb25zdCBkb3QgPSByZXF1aXJlKCdkb3R0eScpXG5jb25zdCBub29uID0gcmVxdWlyZSgnbm9vbicpXG5cbmNvbnN0IENGSUxFID0gYCR7cHJvY2Vzcy5lbnYuSE9NRX0vLmxleGltYXZlbi5ub29uYFxuXG5leHBvcnRzLmNvbW1hbmQgPSAnc2V0IDxrZXk+IDx2YWx1ZT4nXG5leHBvcnRzLmRlc2MgPSAnU2V0IGEgY29uZmlnIHZhbHVlJ1xuZXhwb3J0cy5idWlsZGVyID0ge31cbmV4cG9ydHMuaGFuZGxlciA9IChhcmd2KSA9PiB7XG4gIGNvbnN0IGtleSA9IGFyZ3Yua2V5XG4gIGxldCB2YWx1ZSA9IGFyZ3YudmFsdWVcbiAgdmFsdWUgPSB0b29scy5jaGVja0Jvb2xlYW4odmFsdWUpXG4gIHRvb2xzLmNoZWNrQ29uZmlnKENGSUxFKVxuICBjb25zdCBjb25maWcgPSBub29uLmxvYWQoQ0ZJTEUpXG4gIGNvbnN0IHRoZW1lID0gdGhlbWVzLmxvYWRUaGVtZShjb25maWcudGhlbWUpXG4gIGlmIChjb25maWcudmVyYm9zZSkgdGhlbWVzLmxhYmVsRG93bignQ29uZmlndXJhdGlvbicsIHRoZW1lLCBudWxsKVxuICBpZiAoZG90LmV4aXN0cyhjb25maWcsIGtleSkpIHtcbiAgICBpZiAoL1xcLi9pLnRlc3Qoa2V5KSkge1xuICAgICAgaWYgKC9eXFx3KlxcLmRhdGUvaS50ZXN0KGtleSkpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihjaGFsay5yZWQoXCJBUEkgbGltaXRzIGhhcmRjb2RlZCwgY2FuJ3Qgc2V0IHRoaXMga2V5LlwiKSlcbiAgICAgICAgcHJvY2Vzcy5leGl0KDEpXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBkb3QucHV0KGNvbmZpZywga2V5LCB2YWx1ZSlcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgY29uZmlnW2tleV0gPSB2YWx1ZVxuICAgIH1cbiAgfSBlbHNlIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYE9wdGlvbiAke2tleX0gbm90IGZvdW5kLmApXG4gIH1cbiAgbm9vbi5zYXZlKENGSUxFLCBjb25maWcpXG4gIGNvbnNvbGUubG9nKGBTZXQgb3B0aW9uICR7Y2hhbGsud2hpdGUuYm9sZChrZXkpfSB0byAke2NoYWxrLndoaXRlLmJvbGQodmFsdWUpfS5gKVxufVxuIl19