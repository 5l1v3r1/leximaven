'use strict';

var themes = require('../../themes');
var tools = require('../../tools');

var _ = require('lodash');
var chalk = require('chalk');
var needle = require('needle');
var noon = require('noon');

var CFILE = process.env.HOME + '/.leximaven.noon';

exports.command = 'info <word>';
exports.desc = 'Rhymebrain word info';
exports.builder = {
  out: {
    alias: 'o',
    desc: 'Write cson, json, noon, plist, yaml, xml',
    default: '',
    type: 'string'
  },
  force: {
    alias: 'f',
    desc: 'Force overwriting outfile',
    default: false,
    type: 'boolean'
  },
  save: {
    alias: 's',
    desc: 'Save flags to config file',
    default: false,
    type: 'boolean'
  },
  lang: {
    alias: 'l',
    desc: 'ISO 639-1 language code',
    default: 'en',
    type: 'string'
  }
};
exports.handler = function (argv) {
  tools.checkConfig(CFILE);
  var config = noon.load(CFILE);
  var userConfig = {
    info: {
      lang: argv.l,
      max: argv.m
    }
  };
  if (config.merge) config = _.merge({}, config, userConfig);
  var theme = themes.loadTheme(config.theme);
  if (config.verbose) themes.labelDown('Rhymebrain', theme, null);
  var word = argv.word;
  var task = 'WordInfo';
  var prefix = 'http://rhymebrain.com/talk?function=get';
  var uri = '' + prefix + task + '&word=' + word + '&';
  var pcont = [];
  pcont.push('lang=' + config.info.lang + '&');
  pcont.push('maxResults=' + config.info.max + '&');
  var rest = pcont.join('');
  var url = '' + uri + rest;
  url = encodeURI(url);
  themes.labelDown('Word Info', theme, null);
  var tofile = { type: 'word info', source: 'http://rhymebrain.com' };
  var ctstyle = _.get(chalk, theme.content.style);
  needle.get(url, function (error, response) {
    if (!error && response.statusCode === 200) {
      var info = response.body;
      themes.labelRight('Arpabet', theme, info.pron);
      themes.labelRight('IPA', theme, info.ipa);
      themes.labelRight('Syllables', theme, info.syllables);
      tofile.arpabet = info.pron;
      tofile.ipa = info.ipa;
      tofile.syllables = info.syllables;
      var flags = [];
      if (info.flags.match(/a/)) {
        flags.push(ctstyle('[' + chalk.red.bold('Offensive') + ']'));
        tofile.offensive = true;
      }
      if (info.flags.match(/b/)) {
        flags.push(ctstyle('[Found in dictionary]'));
        tofile.dict = true;
      }
      if (info.flags.match(/c/)) {
        flags.push(ctstyle('[Trusted pronunciation, not generated]'));
        tofile.trusted = true;
      }
      themes.labelRight('Word Flags', theme, flags.join(''));
      if (argv.o) tools.outFile(argv.o, argv.f, tofile);
      if (argv.s && config.merge) noon.save(CFILE, config);
      if (argv.s && !config.merge) console.err(chalk.red('Set option merge to true!'));
    } else {
      console.error(chalk.red.bold('HTTP ' + response.statusCode + ':') + ' ' + chalk.red(error));
    }
  });
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNtZHMvcmh5bWVicmFpbl9jbWRzL2luZm8uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNLFNBQVMsUUFBUSxjQUFSLENBQWY7QUFDQSxJQUFNLFFBQVEsUUFBUSxhQUFSLENBQWQ7O0FBRUEsSUFBTSxJQUFJLFFBQVEsUUFBUixDQUFWO0FBQ0EsSUFBTSxRQUFRLFFBQVEsT0FBUixDQUFkO0FBQ0EsSUFBTSxTQUFTLFFBQVEsUUFBUixDQUFmO0FBQ0EsSUFBTSxPQUFPLFFBQVEsTUFBUixDQUFiOztBQUVBLElBQU0sUUFBVyxRQUFRLEdBQVIsQ0FBWSxJQUF2QixxQkFBTjs7QUFFQSxRQUFRLE9BQVIsR0FBa0IsYUFBbEI7QUFDQSxRQUFRLElBQVIsR0FBZSxzQkFBZjtBQUNBLFFBQVEsT0FBUixHQUFrQjtBQUNoQixPQUFLO0FBQ0gsV0FBTyxHQURKO0FBRUgsVUFBTSwwQ0FGSDtBQUdILGFBQVMsRUFITjtBQUlILFVBQU07QUFKSCxHQURXO0FBT2hCLFNBQU87QUFDTCxXQUFPLEdBREY7QUFFTCxVQUFNLDJCQUZEO0FBR0wsYUFBUyxLQUhKO0FBSUwsVUFBTTtBQUpELEdBUFM7QUFhaEIsUUFBTTtBQUNKLFdBQU8sR0FESDtBQUVKLFVBQU0sMkJBRkY7QUFHSixhQUFTLEtBSEw7QUFJSixVQUFNO0FBSkYsR0FiVTtBQW1CaEIsUUFBTTtBQUNKLFdBQU8sR0FESDtBQUVKLFVBQU0seUJBRkY7QUFHSixhQUFTLElBSEw7QUFJSixVQUFNO0FBSkY7QUFuQlUsQ0FBbEI7QUEwQkEsUUFBUSxPQUFSLEdBQWtCLFVBQUMsSUFBRCxFQUFVO0FBQzFCLFFBQU0sV0FBTixDQUFrQixLQUFsQjtBQUNBLE1BQUksU0FBUyxLQUFLLElBQUwsQ0FBVSxLQUFWLENBQWI7QUFDQSxNQUFNLGFBQWE7QUFDakIsVUFBTTtBQUNKLFlBQU0sS0FBSyxDQURQO0FBRUosV0FBSyxLQUFLO0FBRk47QUFEVyxHQUFuQjtBQU1BLE1BQUksT0FBTyxLQUFYLEVBQWtCLFNBQVMsRUFBRSxLQUFGLENBQVEsRUFBUixFQUFZLE1BQVosRUFBb0IsVUFBcEIsQ0FBVDtBQUNsQixNQUFNLFFBQVEsT0FBTyxTQUFQLENBQWlCLE9BQU8sS0FBeEIsQ0FBZDtBQUNBLE1BQUksT0FBTyxPQUFYLEVBQW9CLE9BQU8sU0FBUCxDQUFpQixZQUFqQixFQUErQixLQUEvQixFQUFzQyxJQUF0QztBQUNwQixNQUFNLE9BQU8sS0FBSyxJQUFsQjtBQUNBLE1BQU0sT0FBTyxVQUFiO0FBQ0EsTUFBTSxTQUFTLHlDQUFmO0FBQ0EsTUFBTSxXQUFTLE1BQVQsR0FBa0IsSUFBbEIsY0FBK0IsSUFBL0IsTUFBTjtBQUNBLE1BQU0sUUFBUSxFQUFkO0FBQ0EsUUFBTSxJQUFOLFdBQW1CLE9BQU8sSUFBUCxDQUFZLElBQS9CO0FBQ0EsUUFBTSxJQUFOLGlCQUF5QixPQUFPLElBQVAsQ0FBWSxHQUFyQztBQUNBLE1BQU0sT0FBTyxNQUFNLElBQU4sQ0FBVyxFQUFYLENBQWI7QUFDQSxNQUFJLFdBQVMsR0FBVCxHQUFlLElBQW5CO0FBQ0EsUUFBTSxVQUFVLEdBQVYsQ0FBTjtBQUNBLFNBQU8sU0FBUCxDQUFpQixXQUFqQixFQUE4QixLQUE5QixFQUFxQyxJQUFyQztBQUNBLE1BQU0sU0FBUyxFQUFFLE1BQU0sV0FBUixFQUFxQixRQUFRLHVCQUE3QixFQUFmO0FBQ0EsTUFBTSxVQUFVLEVBQUUsR0FBRixDQUFNLEtBQU4sRUFBYSxNQUFNLE9BQU4sQ0FBYyxLQUEzQixDQUFoQjtBQUNBLFNBQU8sR0FBUCxDQUFXLEdBQVgsRUFBZ0IsVUFBQyxLQUFELEVBQVEsUUFBUixFQUFxQjtBQUNuQyxRQUFJLENBQUMsS0FBRCxJQUFVLFNBQVMsVUFBVCxLQUF3QixHQUF0QyxFQUEyQztBQUN6QyxVQUFNLE9BQU8sU0FBUyxJQUF0QjtBQUNBLGFBQU8sVUFBUCxDQUFrQixTQUFsQixFQUE2QixLQUE3QixFQUFvQyxLQUFLLElBQXpDO0FBQ0EsYUFBTyxVQUFQLENBQWtCLEtBQWxCLEVBQXlCLEtBQXpCLEVBQWdDLEtBQUssR0FBckM7QUFDQSxhQUFPLFVBQVAsQ0FBa0IsV0FBbEIsRUFBK0IsS0FBL0IsRUFBc0MsS0FBSyxTQUEzQztBQUNBLGFBQU8sT0FBUCxHQUFpQixLQUFLLElBQXRCO0FBQ0EsYUFBTyxHQUFQLEdBQWEsS0FBSyxHQUFsQjtBQUNBLGFBQU8sU0FBUCxHQUFtQixLQUFLLFNBQXhCO0FBQ0EsVUFBTSxRQUFRLEVBQWQ7QUFDQSxVQUFJLEtBQUssS0FBTCxDQUFXLEtBQVgsQ0FBaUIsR0FBakIsQ0FBSixFQUEyQjtBQUN6QixjQUFNLElBQU4sQ0FBVyxjQUFZLE1BQU0sR0FBTixDQUFVLElBQVYsQ0FBZSxXQUFmLENBQVosT0FBWDtBQUNBLGVBQU8sU0FBUCxHQUFtQixJQUFuQjtBQUNEO0FBQ0QsVUFBSSxLQUFLLEtBQUwsQ0FBVyxLQUFYLENBQWlCLEdBQWpCLENBQUosRUFBMkI7QUFDekIsY0FBTSxJQUFOLENBQVcsUUFBUSx1QkFBUixDQUFYO0FBQ0EsZUFBTyxJQUFQLEdBQWMsSUFBZDtBQUNEO0FBQ0QsVUFBSSxLQUFLLEtBQUwsQ0FBVyxLQUFYLENBQWlCLEdBQWpCLENBQUosRUFBMkI7QUFDekIsY0FBTSxJQUFOLENBQVcsUUFBUSx3Q0FBUixDQUFYO0FBQ0EsZUFBTyxPQUFQLEdBQWlCLElBQWpCO0FBQ0Q7QUFDRCxhQUFPLFVBQVAsQ0FBa0IsWUFBbEIsRUFBZ0MsS0FBaEMsRUFBdUMsTUFBTSxJQUFOLENBQVcsRUFBWCxDQUF2QztBQUNBLFVBQUksS0FBSyxDQUFULEVBQVksTUFBTSxPQUFOLENBQWMsS0FBSyxDQUFuQixFQUFzQixLQUFLLENBQTNCLEVBQThCLE1BQTlCO0FBQ1osVUFBSSxLQUFLLENBQUwsSUFBVSxPQUFPLEtBQXJCLEVBQTRCLEtBQUssSUFBTCxDQUFVLEtBQVYsRUFBaUIsTUFBakI7QUFDNUIsVUFBSSxLQUFLLENBQUwsSUFBVSxDQUFDLE9BQU8sS0FBdEIsRUFBNkIsUUFBUSxHQUFSLENBQVksTUFBTSxHQUFOLENBQVUsMkJBQVYsQ0FBWjtBQUM5QixLQXpCRCxNQXlCTztBQUNMLGNBQVEsS0FBUixDQUFpQixNQUFNLEdBQU4sQ0FBVSxJQUFWLFdBQXVCLFNBQVMsVUFBaEMsT0FBakIsU0FBbUUsTUFBTSxHQUFOLENBQVUsS0FBVixDQUFuRTtBQUNEO0FBQ0YsR0E3QkQ7QUE4QkQsQ0F2REQiLCJmaWxlIjoiY21kcy9yaHltZWJyYWluX2NtZHMvaW5mby5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHRoZW1lcyA9IHJlcXVpcmUoJy4uLy4uL3RoZW1lcycpXG5jb25zdCB0b29scyA9IHJlcXVpcmUoJy4uLy4uL3Rvb2xzJylcblxuY29uc3QgXyA9IHJlcXVpcmUoJ2xvZGFzaCcpXG5jb25zdCBjaGFsayA9IHJlcXVpcmUoJ2NoYWxrJylcbmNvbnN0IG5lZWRsZSA9IHJlcXVpcmUoJ25lZWRsZScpXG5jb25zdCBub29uID0gcmVxdWlyZSgnbm9vbicpXG5cbmNvbnN0IENGSUxFID0gYCR7cHJvY2Vzcy5lbnYuSE9NRX0vLmxleGltYXZlbi5ub29uYFxuXG5leHBvcnRzLmNvbW1hbmQgPSAnaW5mbyA8d29yZD4nXG5leHBvcnRzLmRlc2MgPSAnUmh5bWVicmFpbiB3b3JkIGluZm8nXG5leHBvcnRzLmJ1aWxkZXIgPSB7XG4gIG91dDoge1xuICAgIGFsaWFzOiAnbycsXG4gICAgZGVzYzogJ1dyaXRlIGNzb24sIGpzb24sIG5vb24sIHBsaXN0LCB5YW1sLCB4bWwnLFxuICAgIGRlZmF1bHQ6ICcnLFxuICAgIHR5cGU6ICdzdHJpbmcnLFxuICB9LFxuICBmb3JjZToge1xuICAgIGFsaWFzOiAnZicsXG4gICAgZGVzYzogJ0ZvcmNlIG92ZXJ3cml0aW5nIG91dGZpbGUnLFxuICAgIGRlZmF1bHQ6IGZhbHNlLFxuICAgIHR5cGU6ICdib29sZWFuJyxcbiAgfSxcbiAgc2F2ZToge1xuICAgIGFsaWFzOiAncycsXG4gICAgZGVzYzogJ1NhdmUgZmxhZ3MgdG8gY29uZmlnIGZpbGUnLFxuICAgIGRlZmF1bHQ6IGZhbHNlLFxuICAgIHR5cGU6ICdib29sZWFuJyxcbiAgfSxcbiAgbGFuZzoge1xuICAgIGFsaWFzOiAnbCcsXG4gICAgZGVzYzogJ0lTTyA2MzktMSBsYW5ndWFnZSBjb2RlJyxcbiAgICBkZWZhdWx0OiAnZW4nLFxuICAgIHR5cGU6ICdzdHJpbmcnLFxuICB9LFxufVxuZXhwb3J0cy5oYW5kbGVyID0gKGFyZ3YpID0+IHtcbiAgdG9vbHMuY2hlY2tDb25maWcoQ0ZJTEUpXG4gIGxldCBjb25maWcgPSBub29uLmxvYWQoQ0ZJTEUpXG4gIGNvbnN0IHVzZXJDb25maWcgPSB7XG4gICAgaW5mbzoge1xuICAgICAgbGFuZzogYXJndi5sLFxuICAgICAgbWF4OiBhcmd2Lm0sXG4gICAgfSxcbiAgfVxuICBpZiAoY29uZmlnLm1lcmdlKSBjb25maWcgPSBfLm1lcmdlKHt9LCBjb25maWcsIHVzZXJDb25maWcpXG4gIGNvbnN0IHRoZW1lID0gdGhlbWVzLmxvYWRUaGVtZShjb25maWcudGhlbWUpXG4gIGlmIChjb25maWcudmVyYm9zZSkgdGhlbWVzLmxhYmVsRG93bignUmh5bWVicmFpbicsIHRoZW1lLCBudWxsKVxuICBjb25zdCB3b3JkID0gYXJndi53b3JkXG4gIGNvbnN0IHRhc2sgPSAnV29yZEluZm8nXG4gIGNvbnN0IHByZWZpeCA9ICdodHRwOi8vcmh5bWVicmFpbi5jb20vdGFsaz9mdW5jdGlvbj1nZXQnXG4gIGNvbnN0IHVyaSA9IGAke3ByZWZpeH0ke3Rhc2t9JndvcmQ9JHt3b3JkfSZgXG4gIGNvbnN0IHBjb250ID0gW11cbiAgcGNvbnQucHVzaChgbGFuZz0ke2NvbmZpZy5pbmZvLmxhbmd9JmApXG4gIHBjb250LnB1c2goYG1heFJlc3VsdHM9JHtjb25maWcuaW5mby5tYXh9JmApXG4gIGNvbnN0IHJlc3QgPSBwY29udC5qb2luKCcnKVxuICBsZXQgdXJsID0gYCR7dXJpfSR7cmVzdH1gXG4gIHVybCA9IGVuY29kZVVSSSh1cmwpXG4gIHRoZW1lcy5sYWJlbERvd24oJ1dvcmQgSW5mbycsIHRoZW1lLCBudWxsKVxuICBjb25zdCB0b2ZpbGUgPSB7IHR5cGU6ICd3b3JkIGluZm8nLCBzb3VyY2U6ICdodHRwOi8vcmh5bWVicmFpbi5jb20nIH1cbiAgY29uc3QgY3RzdHlsZSA9IF8uZ2V0KGNoYWxrLCB0aGVtZS5jb250ZW50LnN0eWxlKVxuICBuZWVkbGUuZ2V0KHVybCwgKGVycm9yLCByZXNwb25zZSkgPT4ge1xuICAgIGlmICghZXJyb3IgJiYgcmVzcG9uc2Uuc3RhdHVzQ29kZSA9PT0gMjAwKSB7XG4gICAgICBjb25zdCBpbmZvID0gcmVzcG9uc2UuYm9keVxuICAgICAgdGhlbWVzLmxhYmVsUmlnaHQoJ0FycGFiZXQnLCB0aGVtZSwgaW5mby5wcm9uKVxuICAgICAgdGhlbWVzLmxhYmVsUmlnaHQoJ0lQQScsIHRoZW1lLCBpbmZvLmlwYSlcbiAgICAgIHRoZW1lcy5sYWJlbFJpZ2h0KCdTeWxsYWJsZXMnLCB0aGVtZSwgaW5mby5zeWxsYWJsZXMpXG4gICAgICB0b2ZpbGUuYXJwYWJldCA9IGluZm8ucHJvblxuICAgICAgdG9maWxlLmlwYSA9IGluZm8uaXBhXG4gICAgICB0b2ZpbGUuc3lsbGFibGVzID0gaW5mby5zeWxsYWJsZXNcbiAgICAgIGNvbnN0IGZsYWdzID0gW11cbiAgICAgIGlmIChpbmZvLmZsYWdzLm1hdGNoKC9hLykpIHtcbiAgICAgICAgZmxhZ3MucHVzaChjdHN0eWxlKGBbJHtjaGFsay5yZWQuYm9sZCgnT2ZmZW5zaXZlJyl9XWApKVxuICAgICAgICB0b2ZpbGUub2ZmZW5zaXZlID0gdHJ1ZVxuICAgICAgfVxuICAgICAgaWYgKGluZm8uZmxhZ3MubWF0Y2goL2IvKSkge1xuICAgICAgICBmbGFncy5wdXNoKGN0c3R5bGUoJ1tGb3VuZCBpbiBkaWN0aW9uYXJ5XScpKVxuICAgICAgICB0b2ZpbGUuZGljdCA9IHRydWVcbiAgICAgIH1cbiAgICAgIGlmIChpbmZvLmZsYWdzLm1hdGNoKC9jLykpIHtcbiAgICAgICAgZmxhZ3MucHVzaChjdHN0eWxlKCdbVHJ1c3RlZCBwcm9udW5jaWF0aW9uLCBub3QgZ2VuZXJhdGVkXScpKVxuICAgICAgICB0b2ZpbGUudHJ1c3RlZCA9IHRydWVcbiAgICAgIH1cbiAgICAgIHRoZW1lcy5sYWJlbFJpZ2h0KCdXb3JkIEZsYWdzJywgdGhlbWUsIGZsYWdzLmpvaW4oJycpKVxuICAgICAgaWYgKGFyZ3YubykgdG9vbHMub3V0RmlsZShhcmd2Lm8sIGFyZ3YuZiwgdG9maWxlKVxuICAgICAgaWYgKGFyZ3YucyAmJiBjb25maWcubWVyZ2UpIG5vb24uc2F2ZShDRklMRSwgY29uZmlnKVxuICAgICAgaWYgKGFyZ3YucyAmJiAhY29uZmlnLm1lcmdlKSBjb25zb2xlLmVycihjaGFsay5yZWQoJ1NldCBvcHRpb24gbWVyZ2UgdG8gdHJ1ZSEnKSlcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc29sZS5lcnJvcihgJHtjaGFsay5yZWQuYm9sZChgSFRUUCAke3Jlc3BvbnNlLnN0YXR1c0NvZGV9OmApfSAke2NoYWxrLnJlZChlcnJvcil9YClcbiAgICB9XG4gIH0pXG59XG4iXX0=